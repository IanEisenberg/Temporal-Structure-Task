install.packages('ggplot2')
install.packages('reshape2')
install.packages('plyr')
ls
setwd("~/Box Sync/Programming/Experiments/Temporal_Structure")
ls
load('dfa.csv')
read.csv('dfa.csv')
dfa=read.csv('dfa.csv')
head(dfa)
str(dfa)
library(ggplot2)
ggplot(dfa, aes(trial_count, rt)) + geom_point() + facet_wrap('TS')
ggplot(dfa, aes(trial_count, rt)) + geom_point() + facet_wrap('TS') + geom_smooth()
ggplot(dfa, aes(trial_count, rt)) + geom_point() + facet_wrap('TS') + geom_smooth(method = 'lm')
str(dfa)
summary(dfa)
head(dfa)
tail(dfa)
install.packages('yaml')
install.packages("yaml")
library('yaml')
ls
setwd("~/Box Sync/Programming/Experiments/Temporal_Structure")
yaml.load('Data//Pilot000_Temp_Struct_data_2015-01-13_14-57-54.yaml')
a=yaml.load_file('Data//Pilot000_Temp_Struct_data_2015-01-13_14-57-54.yaml')
a
a[1]
a[0]
a[2]
a[3]
a[4]
a[5]
a[6]
a[7]
a['Data']
?read.csv
getwd()
list.files(pattern="Data/.*csv")
list.files
files = list.files(pattern="Data/.*csv")
files
files = list.files(pattern=".*csv")
files
dataFiles <- lapply(Sys.glob(".csv"), read.csv)
dataFiles
setwd("~/Box Sync/Programming/Experiments/Temporal_Structure")
dataFiles <- lapply(Sys.glob("Data/.csv"), read.csv)
dataFiles <- lapply(Sys.glob("Data/*.csv"), read.csv)
dataFiles
d = dataFiles[1]
d
head(d)
str(d)
head(d)
str(d)
tail(d)
summary(d)
len(d)
length(d)
d[0]
d[1,]
d[,1]
d
d = dataFiles[1][1]
d = dataFiles[1][1]
d = dataFiles[1][1]
length(d)
d[0]
d[1,]
str(dataFiles)
str(d)
head(datafiles)
head(dataFiles)
head(dataFiles[1])
head(dataFiles[1][])
dataFiles[]
dataFiles[][]
dataFiles[1][]
dataFiles[1]
a=dataFiles[1]
a=a[1]
dataFiles <- Sys.glob("Data/*.csv")
dataFiles
read.csv[dataFiles[1]]
read.csv(dataFiles[1])
dfa = read.csv(dataFiles[1])
del dfa
rm dfa
del(dfa)
dfa.del
rm(dfa)
dfa = read.csv(dataFiles[1])
head(dfa)
str(dfa)
dfa['FB'] = factor(dfa['FB'])
dfa['FB'] = factor(dfa['FB'])
dfa['FB'] = as.factor(dfa['FB'])
dfa['FB'] = as.factor(dfa[FB])
as.factor(dfa['FB'])
dfa['FB'].factor
factor(dfa['curr_ts'])
dfa$FB = factor(dfa$FB)
dataFiles <- Sys.glob("Data/*.csv")
dfa = read.csv(dataFiles[1])
dfa$FB = factor(dfa$FB)
dfa$curr_ts = factor(dfa$curr_ts)
dfa$stim = factor(dfa$stim)
str(dfa)
rs = lm(rt ~ switch, dfa)
summary(rs)
summary(lm(rt ~ response))
summary(lm(rt ~ response, dfa))
summary(lm(rt ~ stim, dfa))
summary(lm(rt ~ FB, dfa))
shift <- function(d, k) rbind( tail(d,k), head(d,-k), deparse.level = 0 )
shift(dfa$FB,1)
shift(dfa$FB)
a=shift(dfa$FB,1)
a
a[1:10]
a[1:10,]
a[,1:10]
a
str(a)
len(a)
length(a)
length(dfa)
length(dfa$FB)
639*2
a
a[639]
a[1]
a[1:10]
dfa$FB[1:10]
a=shift(dfa$FB,1)
a
a[1:10]
a[1:10,1]
a[1,1:10]
a[2,1:10]
df <- data.frame(a=1:10, b = 11:20)
df
shift(df,2)
shift(dfa,1)
df
shift(df$a,2)
shift(df,2)
shift(df,2)$a
lag(df$a,2)
lag(df$a,1)
?lag
lag(df,2)
lag(df,1)
lag(df$a,1)
a
a
df$a
lag(df$a,2)
lag(df$a,3)
lagpad <- function(x, k) {
c(rep(NA, k), x)[1 : length(x)]
}
lagpad(df$a,2)
dfa$lag_FB = lagpad(df$FB,1)
summary(lm(rt~lag_FB,dfa))
head(dfa)
str(FB)
str(dfa)
rep(NA,1)
x
lagpad(dfa$FB,1)
dfa$lag_FB = lagpad(dfa$FB,1)
summary(lm(rt~lag_FB,dfa))
str(dfa)
dfa$lag_FB = factor(lagpad(dfa$FB,1))
str(dfa)
summary(lm(rt~lag_FB,dfa))
dfa$lag_FB = factor(lagpad(dfa$FB,1), levels = c('0', '1'))
head(dfa)
)
dfa$lag_FB = factor(lagpad(dfa$FB,1))
head(dfa)
dfa$lag_FB = factor(lagpad(dfa$FB,1),labels = c('0','1'))
head(dfa)
head(dfa)
summary(lm(rt~lag_FB,dfa))
summary(lm(rt~lag_FB + switch,dfa))
rs4 = glm(switch ~ lag_FB, data = dfa, family = binomial)
summary(rs4)
rs4 = glm(switch ~ lag_FB + stim, data = dfa, family = binomial)
rs4
summary(rs4)
lagpad(dfa$FB,-1)
length(dfa$FB)
tail(dfa)
lagpad(dfa$FB,1)
length(lagpad(dfa$FB,1))
dfa$FB[3:]
dfa$FB[3:end]
dfa$FB[3:5]
dfa$FB[3::]
dfa$FB[3,]
dfa$FB[3]
dfa$FB[3:]
dfa$FB[3:end]
lagpad <- function(x, k) {
if k > 0 {}
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, k))[k : length(x)+k]
}
}
lagpad <- function(x, k) {
if k > 0 {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, k))[k : length(x)+k]
}
}
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, k))[k : length(x)+k]
}
}
lagpad(dfa$FB,1)
lagpad(dfa$FB,-1)
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k))[abs(k) : length(x)+k]
}
}
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k))[abs(k) : length(x)+k]
}
}
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k))[abs(k) : length(x)+k]
}
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k))[abs(k) : length(x)+k]
}
}
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
}
}
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k))[abs(k) : length(x)+k]
}
}
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k))[abs(k) : length(x)+k]
}
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k))[abs(k) : length(x)+k]
}}
abs(3)
abs(-3)
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k))[abs(k) : length(x)+k])
}}
lagpad(dfa$FB,1)
lagpad(dfa$FB,-1)
x=dfa$FB
k=-1
c(x, rep(NA, abs(k))
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k)))[abs(k) : length(x)+k]
}}
lagpad(dfa$FB,-1)
lagpad(dfa$FB,-2)
lagpad(dfa$FB,-3)
x
k
c(x, rep(NA, abs(k)))
c(x, rep(NA, abs(k)))
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k)))[abs(k+1) : length(x)+k+1]
}}
lagpad(dfa$FB,-1)
lagpad(dfa$FB,-3)
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k)))
}}
lagpad(dfa$FB,-3)
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k)))[abs(k)+1 : length(x)-k]
}}
lagpad(dfa$FB,-1)
lagpad(dfa$FB,-2)
lagpad <- function(x, k) {
if(k > 0) {
c(rep(NA, k), x)[1 : length(x)]
} else {
c(x, rep(NA, abs(k)))[abs(k)+1 : length(x)-k-1]
}}
lagpad(dfa$FB,-1)
a=lagpad(dfa$FB,-1)
length(a)
